{"version":3,"sources":["firebase/firebase-config.js","types/types.js","helpers/fileUpload.js","helpers/loadNotes.js","actions/notes.js","actions/ui.js","actions/auth.js","routers/PrivateRoutes.js","routers/PublicRoutes.js","hooks/useForm.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","components/journal/JournalScreen.js","routers/AppRouter.js","reducers/notesReducer.js","reducers/uiReducer.js","store/store.js","reducers/authReducer.js","JournalApp.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","getFirestore","googleAuthProvider","GoogleAuthProvider","auth","getAuth","storage","getStorage","types","fileUpload","img","idUser","idNote","a","imageRef","ref","uploadBytesResumable","snapshot","getDownloadURL","loadNotes","uid","getDocs","collection","notesSnap","notes","forEach","snapHijo","push","id","data","activeNote","note","type","payload","addNewNote","startLoadingNotes","dispatch","setNotes","startSaveNote","getState","url","noteToFirestore","updateDoc","doc","refreshNote","Swal","fire","title","deleteNote","setError","msgError","startLoginEmailPassword","email","password","signInWithEmailAndPassword","then","user","login","displayName","catch","e","console","log","message","finally","logout","PrivateRoutes","isAuthenticated","Component","component","rest","localStorage","setItem","location","pathname","props","to","propTpes","PropTypes","bool","isRequired","func","PublicRoutes","useForm","initialState","useState","values","setValues","handleInputChange","target","name","value","reset","newState","LoginScreen","useDispatch","loading","useSelector","state","ui","fromValues","className","onSubmit","preventDefault","placeholder","autoComplete","onChange","disabled","onClick","signInWithPopup","src","alt","RegisterScreen","password2","formValues","isFormValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailPasswordName","AuthRouter","exact","path","JournalEntry","date","body","noteDate","moment","style","backgroundSize","backgroundImage","substring","format","JournalEntries","map","Sidebar","signOut","newNote","Date","getTime","addDoc","NotesAppBar","active","accept","display","file","files","text","allowOutsideClick","didOpen","showLoading","imgUrl","close","startUpLoading","document","querySelector","click","NoteScreen","activeId","useRef","useEffect","current","deleteDoc","startDeleting","NothingSelected","JournalScreen","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.511a3753.chunk.js","sourcesContent":["import { initializeApp } from 'firebase/app'\r\nimport { \r\n    getAuth, \r\n    signInWithPopup, \r\n    createUserWithEmailAndPassword,\r\n    signInWithEmailAndPassword, \r\n    signOut,\r\n    updateProfile, \r\n    GoogleAuthProvider,\r\n    onAuthStateChanged } from \"firebase/auth\";\r\nimport { \r\n    getFirestore, \r\n    collection, \r\n    doc, \r\n    addDoc, \r\n    getDocs, \r\n    updateDoc, \r\n    deleteDoc } from 'firebase/firestore'; // /lite\r\n\r\n\r\nimport{\r\n\r\n    getStorage,\r\n    ref,\r\n    uploadBytes,\r\n    uploadBytesResumable,\r\n    getDownloadURL\r\n    \r\n} from 'firebase/storage'\r\n\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_ID\r\n};\r\n  \r\n// Initialize Firebase\r\nconst firebase = initializeApp(firebaseConfig);\r\n\r\nconst db = getFirestore(firebase);\r\nconst googleAuthProvider = new GoogleAuthProvider();\r\nconst auth = getAuth();\r\nconst storage = getStorage()\r\n\r\n\r\nexport {\r\n    db,\r\n    collection, \r\n    addDoc,\r\n    getDocs,\r\n    updateDoc, \r\n    deleteDoc,\r\n    doc,\r\n    auth,\r\n    googleAuthProvider,\r\n    signInWithPopup,\r\n    createUserWithEmailAndPassword,\r\n    signInWithEmailAndPassword,\r\n    signOut,\r\n    updateProfile,\r\n    onAuthStateChanged,\r\n    storage,\r\n    ref,\r\n    uploadBytes,\r\n    uploadBytesResumable,\r\n    getDownloadURL,\r\n    firebase\r\n}","\r\n\r\nexport const types = {\r\n    login: '[AUTH] Login',\r\n    logout: '[AUTH] Logout',\r\n\r\n    uiSetError: '[UI] Set Error',\r\n    uiRemoveError: '[UI] Remove Error',\r\n    uiStartLoading: '[UI] Start Loading',\r\n    uiFinishLoading: '[UI] Finish Loading',\r\n\r\n    notesAddNew: '[NOTES] New Note',\r\n    notesActive: '[NOTES] Active Note',\r\n    notesLoad: '[NOTES] Load Notes',\r\n    notesUpdate: '[NOTES] Update Note',\r\n    notesFileUrl: '[NOTES] Update image Note',\r\n    notesDelete: '[NOTES] Delete Note',\r\n    notesLogoutCleaning: '[NOTES] Logout Cleaning',\r\n}","import { storage, ref, uploadBytes, uploadBytesResumable, getDownloadURL } from '../firebase/firebase-config'\r\n\r\n\r\nexport const fileUpload = async ( img, idUser, idNote  ) => {\r\n\r\n    // v8 de firebase\r\n    // var storageRef = firebase.storage().ref();\r\n    // const imgRef = await storage.ref().child('jose').child('foto perfil')\r\n\r\n    try {\r\n        \r\n        const imageRef = ref(storage, `${idUser}/${idNote}.jpg`)\r\n\r\n        // const { ref:imgRef } = await uploadBytes(imageRef , img);\r\n\r\n        const snapshot = await uploadBytesResumable(imageRef, img )\r\n        return await getDownloadURL(snapshot.ref)\r\n\r\n    } catch (error) {\r\n        throw error\r\n    }\r\n\r\n}","import { db, collection, getDocs } from \"../firebase/firebase-config\"\r\n\r\n\r\nexport const loadNotes = async ( uid ) => {\r\n\r\n    // const notesSnap = await db.collection( `${ uid }/journal/notes`).get()\r\n    const notesSnap = await getDocs( collection( db, `${ uid }/journal/notes` ) )\r\n    const notes = []\r\n\r\n    notesSnap.forEach( snapHijo => {\r\n        notes.push({\r\n            id: snapHijo.id,\r\n            ...snapHijo.data()\r\n        })\r\n    })\r\n\r\n\r\n    return notes\r\n}","import Swal from \"sweetalert2\"\r\nimport { addDoc, collection, db, doc, updateDoc, deleteDoc } from \"../firebase/firebase-config\"\r\nimport { fileUpload } from \"../helpers/fileUpload\"\r\nimport { loadNotes } from \"../helpers/loadNotes\"\r\nimport { types } from '../types/types'\r\n\r\nexport const startNewNote = () => {\r\n    return async( dispatch, getState ) => {\r\n\r\n        const { uid } = getState().auth\r\n\r\n        const newNote = {\r\n            title: '',\r\n            body: '',\r\n            date: new Date().getTime()\r\n        }\r\n\r\n        // const doc = db.collection(`${ uid }/journal/notes`).add( newNote )\r\n\r\n        // la promesa retorna una referencia al documento\r\n        const doc = await addDoc( collection( db, `${ uid }`, '/journal/notes'), newNote)\r\n\r\n        dispatch( activeNote( doc.id, newNote ) )\r\n        dispatch( addNewNote( doc.id, newNote ) )\r\n    }\r\n}\r\n\r\nexport const activeNote = ( id, note ) => ({\r\n    type: types.notesActive,\r\n    payload:{ id, ...note }\r\n})\r\n\r\nexport const addNewNote = ( id, note ) => ({\r\n    type: types.notesAddNew,\r\n    payload:{\r\n        id,\r\n        ...note\r\n    }\r\n})\r\n\r\nexport const startLoadingNotes = ( uid ) => {\r\n    return async ( dispatch ) => {\r\n\r\n        const notes = await loadNotes( uid )\r\n        dispatch( setNotes( notes ) )\r\n    }\r\n}\r\n\r\nexport const setNotes = ( notes ) => ({\r\n    type: types.notesLoad,\r\n    payload: notes\r\n})\r\n\r\n\r\nexport const startSaveNote = ( note ) => {\r\n    return async ( dispatch, getState ) => {\r\n\r\n        const { uid } = getState().auth\r\n\r\n        if( !note.url ){\r\n            delete note.url\r\n        }\r\n\r\n        const noteToFirestore = { ...note }\r\n        delete noteToFirestore.id\r\n\r\n\r\n        await updateDoc( doc( db, `${ uid }/journal/notes/${ note.id }`), noteToFirestore )\r\n\r\n        dispatch( refreshNote( note.id, noteToFirestore ) )\r\n        Swal.fire('Saved', note.title, 'success')\r\n    }\r\n}\r\n\r\nexport const refreshNote = ( id, note ) => ({\r\n    type: types.notesUpdate,\r\n    payload: { \r\n        id, \r\n        note: {\r\n            id,\r\n            ...note\r\n        }\r\n    }\r\n})\r\n\r\nexport const startDeleting = ( id ) => {\r\n    return async ( dispatch, getState ) => {\r\n\r\n        const uid = getState().auth.uid\r\n\r\n        // await db.doc(`${ uid }/journal/notes/${ id }`).delete()\r\n        await deleteDoc( doc( db, `${ uid }/journal/notes/${ id }`) )\r\n\r\n        dispatch( deleteNote(id) )\r\n    }\r\n}\r\n\r\nexport const deleteNote = ( id ) => ({\r\n    type: types.notesDelete,\r\n    payload: id\r\n})\r\n\r\nexport const notesCleaning = () => ({\r\n    type: types.notesLogoutCleaning\r\n})\r\n\r\nexport const startUpLoading = ( file ) => {\r\n\r\n    return async ( dispatch, getState ) => {\r\n\r\n        const { uid } = getState().auth\r\n        const { active:activeNote } = getState().notes\r\n\r\n        Swal.fire({\r\n            title:'Uploading...',\r\n            text: 'Please wait....',\r\n            allowOutsideClick: false,\r\n            didOpen: () => {\r\n                Swal.showLoading()\r\n            }\r\n        })\r\n\r\n        const imgUrl = await fileUpload( file, uid, activeNote.id )\r\n        activeNote.url = imgUrl\r\n\r\n        dispatch( startSaveNote( activeNote ) )\r\n\r\n        Swal.close()\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nexport const setError = ( msgError ) => ({\r\n    type: types.uiSetError,\r\n    payload: msgError\r\n})\r\n\r\n\r\nexport const removeError = () => ({\r\n    type: types.uiRemoveError\r\n})\r\n\r\nexport const startLoading = () => ({\r\n    type: types.uiStartLoading\r\n})\r\n\r\nexport const finishLoading = () => ({\r\n    type: types.uiFinishLoading\r\n})","import Swal from \"sweetalert2\"\r\nimport { \r\n    signInWithPopup, \r\n    auth, \r\n    googleAuthProvider, \r\n    createUserWithEmailAndPassword, \r\n    signInWithEmailAndPassword, \r\n    signOut,\r\n    updateProfile, \r\n} from \"../firebase/firebase-config\"\r\nimport { types } from \"../types/types\"\r\nimport { notesCleaning } from \"./notes\"\r\nimport { finishLoading, startLoading } from \"./ui\"\r\n\r\nexport const startLoginEmailPassword = ( email, password ) => {\r\n    return ( dispatch ) => {\r\n        dispatch( startLoading() )\r\n        signInWithEmailAndPassword(auth, email, password)\r\n            .then( ({ user }) => {               \r\n                    \r\n                dispatch( login( user.uid, user.displayName) )\r\n                // dispatch( finishLoading() )\r\n            }) \r\n            .catch( e => {\r\n                console.log(e)\r\n                // dispatch( finishLoading() )\r\n                Swal.fire('Error', e.message, 'error')\r\n            })\r\n            .finally( () => {\r\n                dispatch( finishLoading() )\r\n            })\r\n\r\n    }\r\n}\r\n\r\nexport const startGoogleLogin = () => {\r\n    return( dispatch ) => {\r\n\r\n        signInWithPopup(auth, googleAuthProvider)\r\n            .then( ({ user }) => {\r\n                dispatch( login( user.uid, user.displayName))\r\n            }) \r\n    }\r\n}\r\n\r\n\r\nexport const startRegisterWithEmailPasswordName = ( email, password, name ) => {\r\n    return ( dispatch ) => {\r\n\r\n        createUserWithEmailAndPassword(auth, email, password)\r\n            .then( async({ user }) => {\r\n\r\n                /**\r\n                 * cuando creamos un usuario de esta manera, no tenemos el displayName,\r\n                 * ya que este atributo se completa cuando hacemos login con redes sociales.\r\n                 * Por eso usamos updateProfile(), para cargar el displayName en firebase con el name que solicitamos en nuestro registo,\r\n                 * tambien podriamos cargar un fato de perfil pasando un link de la misma\r\n                 * \r\n                 */\r\n                await updateProfile( user, { displayName: name } )\r\n                    \r\n                dispatch( login( user.uid, user.displayName) )\r\n\r\n            }) \r\n            .catch( e => {\r\n                console.log(e)\r\n                Swal.fire('Error', e.message, 'error')\r\n            })\r\n    }\r\n}\r\n\r\nexport const login = ( uid, displayName ) => ({\r\n        type: types.login,\r\n        payload: { uid, displayName }\r\n    })\r\n\r\nexport const startLogout = () => {\r\n    return async( dispatch ) => {\r\n        await signOut( auth )\r\n\r\n        dispatch( logout() )\r\n        dispatch( notesCleaning() )\r\n    }\r\n}\r\n\r\nexport const logout = () => ({\r\n    type: types.logout\r\n})","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { Redirect, Route } from 'react-router'\r\n\r\nexport const PrivateRoutes = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    localStorage.setItem('lastPath', rest.location.pathname )\r\n    \r\n    return (\r\n        <Route \r\n            { ...rest }\r\n            component={ (props) => { //NOTA 1             \r\n                return ( isAuthenticated )\r\n                    ? ( <Component { ...props } /> )\r\n                    : ( <Redirect to=\"/auth\" /> )\r\n            }}\r\n        \r\n        />            \r\n    )\r\n}\r\n\r\nPrivateRoutes.propTpes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n\r\n/**\r\n * NOTA 1: al igual que con useState, que podemos recuperar el state usando setState( state => state + 1 ),\r\n * en el componente, con un callback podemos obtener los props, en este caso los props del componente ROUTE { history, natch, Location }\r\n */\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { Redirect, Route } from 'react-router'\r\n\r\nexport const PublicRoutes = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route\r\n            { ...rest } \r\n            component={ (props) => (\r\n                (isAuthenticated)\r\n                    ? ( <Redirect to=\"/\" /> )\r\n                    : ( <Component {...props} /> )\r\n            )}\r\n        \r\n        /> \r\n    )\r\n}\r\n\r\nPublicRoutes.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import { useState } from \"react\"\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    const reset = (newState = initialState) => {\r\n        setValues( newState )\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom'\nimport { startGoogleLogin, startLoginEmailPassword } from '../../actions/auth';\nimport { useForm } from '../../hooks/useForm';\n\nexport const LoginScreen = () => {\n\n    const dispatch = useDispatch()\n    const { loading } = useSelector( state => state.ui )\n\n    const [ fromValues, handleInputChange] = useForm({\n        email:'',\n        password:''\n    })\n\n    const { email, password } = fromValues\n\n    const handleLogin = ( e ) => {\n        e.preventDefault() \n        dispatch( startLoginEmailPassword( email, password) )\n    }\n\n    const handleGoogleLogin = () => {\n        dispatch( startGoogleLogin() )\n    }\n\n    return (\n        <div>\n            <h3 className=\"auth__title\">Login</h3>\n\n            <form onSubmit={ handleLogin }> \n\n                <input \n                    type=\"text\"\n                    placeholder=\"Email\"\n                    name=\"email\"\n                    className=\"auth__input\"\n                    autoComplete=\"off\"\n                    value={ email }\n                    onChange={ handleInputChange }\n                />\n\n                <input \n                    type=\"password\"\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    className=\"auth__input\"\n                    value={ password }\n                    onChange={ handleInputChange }\n                />\n\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block\"\n                    disabled={ loading }\n                >\n                    Login\n                </button>\n\n                \n                <div className=\"auth__social-networks\">\n                    <p>Login with social networks</p>\n\n                    <div \n                        className=\"google-btn\"\n                        onClick={ handleGoogleLogin }\n                    >\n                        <div className=\"google-icon-wrapper\">\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\n                        </div>\n                        <p className=\"btn-text\">\n                            <b>Sign in with google</b>\n                        </p>\n                    </div>\n                </div>\n\n                <Link \n                    to=\"/auth/register\"\n                    className=\"link\"\n                >\n                    Create new account    \n                </Link>\n\n            </form>\n        </div>\n    )\n}\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport validator from 'validator'\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth';\nimport { removeError, setError } from '../../actions/ui';\n\nimport { useForm } from '../../hooks/useForm';\n\nexport const RegisterScreen = () => {\n\n    const dispatch = useDispatch()\n    const { msgError } = useSelector(state => state.ui)\n\n    const [formValues, handleInputChange ] = useForm({\n        name:'',\n        email:'',\n        password:'',\n        password2:'',\n    })\n\n    const {name, email, password, password2 } = formValues\n\n    const handleRegister = (e) => {\n        e.preventDefault()\n\n        if( isFormValid() ){\n           dispatch( startRegisterWithEmailPasswordName( email, password, name))\n        }\n    }\n\n    const isFormValid = () => {\n\n        if( name.trim().length === 0 ){\n            dispatch( setError( 'Name is required' ))\n            return false\n        }else if( !validator.isEmail( email ) ){\n            dispatch( setError( 'Email is not valid' ))\n            return false\n        }else if( password !== password2 ||  password.length < 5 ){\n            dispatch( setError( 'Password should be at least 6 charaacters and match each other' ))\n            return false\n        }\n        dispatch( removeError() )\n        return true\n    }\n\n    return (\n        <div>\n            <h3 className=\"auth__title\">Register</h3>\n\n            <form onSubmit={ handleRegister }>\n\n                {\n                    msgError && (\n                        <div className=\"auth__alert-error\">\n                            { msgError }\n                        </div>\n                    )\n                }\n\n                <input \n                    type=\"text\"\n                    placeholder=\"Name\"\n                    name=\"name\"\n                    className=\"auth__input\"\n                    autoComplete=\"off\"\n                    value={ name }\n                    onChange={ handleInputChange }\n                />\n\n                <input \n                    type=\"text\"\n                    placeholder=\"Email\"\n                    name=\"email\"\n                    className=\"auth__input\"\n                    autoComplete=\"off\"\n                    value={ email }\n                    onChange={ handleInputChange }\n                />\n\n                <input \n                    type=\"password\"\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    className=\"auth__input\"\n                    value={ password }\n                    onChange={ handleInputChange }\n                />\n\n                <input \n                    type=\"password\"\n                    placeholder=\"Confirm password\"\n                    name=\"password2\"\n                    className=\"auth__input\"\n                    value={ password2 }\n                    onChange={ handleInputChange }\n                />\n\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block mb-5\"\n                >\n                    Register\n                </button>\n\n               \n\n                <Link \n                    to=\"/auth/login\"\n                    className=\"link\"\n                >\n                    Already registered?\n                </Link>\n\n            </form>\n        </div>\n    )\n}\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nimport { LoginScreen } from '../components/auth/LoginScreen';\nimport { RegisterScreen } from '../components/auth/RegisterScreen';\n\nexport const AuthRouter = () => {\n    return (\n        <div className=\"auth__main\">\n            <div className=\"auth__box-container\">\n                <Switch>\n                    <Route \n                        exact\n                        path=\"/auth/login\"\n                        component={ LoginScreen }\n                    />\n\n                    <Route \n                        exact\n                        path=\"/auth/register\"\n                        component={ RegisterScreen }\n                    />\n\n                    <Redirect to=\"/auth/login\" />\n\n\n                </Switch>\n            </div>\n\n        </div>\n    )\n}\n","import React from 'react'\nimport moment from 'moment'\nimport { useDispatch } from 'react-redux'\nimport { activeNote } from '../../actions/notes'\n\n// const urlDefautl = 'https://earthsky.org/upl/2018/12/comet-wirtanen-Jack-Fusco-dec-2018-Anza-Borrego-desert-CA-e1544613895713.jpg'\n\nexport const JournalEntry = ( { id, date, title, body, url } ) => {\n\n    const dispatch = useDispatch()\n    const noteDate = moment( date )\n\n    const handleEntryClick = () => {\n        dispatch( activeNote(  id, { date, title, body, url } ) )\n    }\n\n    return (\n        <div \n            className=\"journal__entry pointer\"\n            onClick={ handleEntryClick }\n        >\n            \n            {\n                url && (\n\n                    <div \n                        className=\"journal__entry-picture\"\n                        style={{\n                            backgroundSize: 'cover',\n                            backgroundImage: `url(${ url })`\n                        }}\n                    ></div>\n                )\n            }\n\n            <div className=\"journal__entry-body\">\n                <p className=\"journal__entry-title\">\n                    { title }\n                </p>\n                <p className=\"journal__entry-content\">\n                    { ( body?.length > 145 ) ? body.substring(0,145) + '...' : body }\n                </p>\n            </div>\n\n            <div className=\"journal__entry-date-box\">\n                <span> { noteDate.format('dddd') } </span>\n                <h4> { noteDate.format('Do') }  </h4>\n            </div>\n\n        </div>\n    )\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux';\nimport { JournalEntry } from './JournalEntry';\n\nexport const JournalEntries = () => {    \n\n    const { notes } = useSelector( state => state.notes );\n\n    return (\n        <div className=\"journal__entries\">\n            \n            {\n                notes.map( note => (\n                    <JournalEntry \n                        key={ note.id } \n                        { ...note }\n                    />\n                ))\n            }\n\n        </div>\n    )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { startLogout } from '../../actions/auth'\nimport { startNewNote } from '../../actions/notes'\nimport { JournalEntries } from './JournalEntries'\n\nexport const Sidebar = () => {\n\n    const dispatch = useDispatch()\n    const { name } = useSelector(state => state.auth)\n\n    const handleLogout = () => {\n        dispatch( startLogout() )\n    }\n\n    const handleNew = () => {\n        dispatch( startNewNote() )\n    }\n\n    return (\n        <aside className=\"journal__sidebar\">\n            \n            <div className=\"journal__sidebar-navbar\">\n                <h3 className=\"mt-5\">\n                    <i className=\"far fa-moon\"></i>\n                    <span> { name } </span>\n                </h3>\n\n                <button \n                    className=\"btn\"\n                    onClick={ handleLogout }\n                >\n                    Logout\n                </button>\n            </div>\n\n            <div \n                className=\"journal__new-entry\"\n                onClick={ handleNew }\n            >\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\n                <p className=\"mt-5\">\n                    New entry\n                </p>\n            </div>\n\n            <JournalEntries />    \n\n        </aside>\n    )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { startSaveNote, startUpLoading } from '../../actions/notes'\n\n\nexport const NotesAppBar = () => {\n\n    const dispatch = useDispatch()\n    const { active:note} = useSelector( state => state.notes )\n\n    const handleSave = () => {\n        dispatch( startSaveNote( note ) )\n    }\n\n\n    const handlePictureClick = () => {\n\n        document.querySelector('#fileSelector').click()\n    }\n\n    const handleFileChange = ( e ) => {\n        const file =  e.target.files[0]\n\n        if( file ){\n            dispatch( startUpLoading( file ) )\n        }\n    }\n\n\n    return (\n        <div className=\"notes__appbar\">\n            <span>28 de agosto 2020</span>\n\n             <input \n                type=\"file\"\n                name=\"file\"\n                id=\"fileSelector\"\n                accept=\"image/jpg, image/jpeg\"\n                style={{ display:'none'}}\n                onChange={ handleFileChange }\n            />\n\n            <div>\n                <button \n                    className=\"btn\"\n                    onClick={ handlePictureClick }\n                >\n                    Picture\n                </button>               \n\n                <button \n                    className=\"btn\"\n                    onClick={ handleSave }\n                >\n                    Save\n                </button>\n            </div>\n        </div>\n    )\n}\n","import React, { useEffect, useRef } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { activeNote, startDeleting } from '../../actions/notes'\nimport { useForm } from '../../hooks/useForm'\n\nimport { NotesAppBar } from './NotesAppBar'\n\nexport const NoteScreen = () => {\n\n    const dispatch = useDispatch()\n    const { active:note } = useSelector( state => state.notes )\n    const [ formValues, handleInputChange, reset ] = useForm( note )\n\n    /**\n     * cuando pasamos de una nota a otra, el useForm no cambia su estado,\n     * con useEffect, cambiamos el estado de useForm si el id de la nota activa es distinto de la nota\n     * que queremos mostrar, ya que si no ponemos esa condicion\n     * el efecto se dispararia constantemente y para ello no ayudamos con useRef que puede cambiar de valor \n     * sin redibujar el  componente \n     */\n\n    const activeId = useRef( note.id )\n\n    useEffect( () => {\n\n        if( note.id !== activeId.current ){\n                reset( note )\n                activeId.current = note.id \n        }\n\n    }, [note, reset] )\n\n\n    useEffect( () => {\n        \n        dispatch( activeNote( formValues.id, { ...formValues } ) )\n\n    }, [ formValues, dispatch ] )\n     \n\n    const { title, body, id } = formValues \n\n    const handleDelete = () => {\n\n        dispatch( startDeleting( id ) )\n    }\n\n    return (\n        <div className=\"notes__main-content\">\n            \n            <NotesAppBar />\n\n            <div className=\"notes__content\">\n\n                <input \n                    type=\"text\"\n                    placeholder=\"Some awesome title\"\n                    className=\"notes__title-input\"\n                    autoComplete=\"off\"\n                    name=\"title\"\n                    value={ title }\n                    onChange={ handleInputChange }\n                />\n\n                <textarea\n                    placeholder=\"What happened today\"\n                    className=\"notes__textarea\"\n                    name=\"body\"\n                    value={ body }\n                    onChange={ handleInputChange }\n                ></textarea>\n\n                {\n                    ( note.url )\n                    && (\n                        <div className=\"notes__image\">\n                            <img \n                                src={ note.url }\n                                alt=\"imagen\"\n                            />\n                        </div>\n                    )\n                }\n\n\n\n            </div>\n\n            <button\n                className=\"btn btn-danger\"\n                onClick={ handleDelete }\n            >\n                Delete\n            </button>\n\n        </div>\n    )\n}\n","import React from 'react'\n\nexport const NothingSelected = () => {\n    return (\n        <div className=\"nothing__main-content\">\n            <p>\n                Select something\n                <br />\n                pr create an entry!\n            </p>\n\n            <i className=\"far fa-star fa-4x mt-5\"></i>\n\n        </div>\n    )\n}\n","import React from 'react';\nimport { Sidebar } from './Sidebar';\nimport { NoteScreen } from '../notes/NoteScreen';\nimport { useSelector } from 'react-redux';\nimport { NothingSelected } from './NothingSelected';\n\n\nexport const JournalScreen = () => {\n\n    const { active } = useSelector( state => state.notes )\n    return (\n        <div className=\"journal__main-content\">\n            \n            <Sidebar />\n\n            <main>\n\n                {\n                    active \n                        ? <NoteScreen />\n                        : <NothingSelected />\n                }\n                \n\n            </main>\n\n\n        </div>\n    )\n}\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Redirect\n  } from 'react-router-dom';\n\nimport { login } from '../actions/auth';\n\nimport { PrivateRoutes } from '../routers/PrivateRoutes'\nimport { PublicRoutes } from '../routers/PublicRoutes'\nimport { AuthRouter } from './AuthRouter';\nimport { JournalScreen } from '../components/journal/JournalScreen';\nimport { onAuthStateChanged, auth } from '../firebase/firebase-config';\nimport { startLoadingNotes } from '../actions/notes';\n\nexport const AppRouter = () => {\n\n    const dispatch = useDispatch()\n\n    const [checking, setChecking] = useState(true)\n    const [isLoggedIn, setIsLoggedIn] = useState(false)\n\n    useEffect( () => {\n        /**\n         *  onAuthStateChanged es un observador del estado de autenticacion del usuario.\n         * En caso de que la pagina se recargara, perderiamos los datos del state, pero \n         * onAuthStateChanged nos retorna el usuario en caso de estar autenticado o null en\n         * caso de no estarlo \n         */\n        onAuthStateChanged( auth, async( user ) => {  \n\n            if( user?.uid ){\n                dispatch( login( user.uid, user.displayName ) )\n                setIsLoggedIn( true )\n\n                //aca es el primer momento en que conocemos cual es el uid\n                //const notes = await loadNotes( user.uid )\n                //dispatch( setNotes( notes ) )\n                // es mas elegante manejar la carga del store mediante acciones\n                dispatch( startLoadingNotes( user.uid ) )\n            }else{\n                setIsLoggedIn( false )\n            }\n            \n            setChecking(false)\n        })\n\n    }, [ dispatch, setChecking ])\n\n\n    if( checking ){\n        return(\n            <h2>Cargando datos...</h2>\n        )\n    }\n\n    return (\n        <Router>\n            <div>\n                <Switch>\n\n                    <PublicRoutes \n                        isAuthenticated={ isLoggedIn }\n                        component={ AuthRouter }\n                        path=\"/auth\" \n                    />\n\n                    <PrivateRoutes  \n                        isAuthenticated={ isLoggedIn }\n                        component={ JournalScreen }\n                        path=\"/\" \n                        exact\n                    />\n\n                    <Redirect to=\"/auth/login\" />\n\n\n                </Switch>\n            </div>\n        </Router>\n    )\n}\n","import { types } from \"../types/types\";\r\n\r\n\r\nconst initialState = {\r\n    notes: [],\r\n    active: null\r\n}\r\n\r\nexport const notesReducer = ( state = initialState, action ) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case types.notesActive:\r\n            return{\r\n                ...state,\r\n                active: { ...action.payload }\r\n            }\r\n\r\n        case types.notesAddNew:\r\n            return {\r\n                ...state,\r\n                notes: [ action.payload, ...state.notes]\r\n            }\r\n\r\n        case types.notesLoad:\r\n            return{\r\n                ...state,\r\n                notes: [ ...action.payload ]\r\n            }\r\n\r\n        case types.notesUpdate:\r\n            return{\r\n                ...state,\r\n                // active: null,\r\n                notes: state.notes.map(\r\n                    note => note.id === action.payload.id\r\n                        ? action.payload.note\r\n                        : note\r\n                )\r\n            }\r\n\r\n        case types.notesDelete:\r\n            return{\r\n                ...state,\r\n                active: null,\r\n                notes: state.notes.filter( note => note.id !== action.payload )\r\n            }\r\n\r\n        case types.notesLogoutCleaning:\r\n            // return initialState\r\n            return{\r\n                ...state,\r\n                active: null,\r\n                notes: []\r\n            }\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from '../types/types'\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    msgError: null\r\n}\r\nexport const uiReducer = ( state = initialState, action ) => {\r\n    switch (action.type) {\r\n        case types.uiSetError:\r\n            return{\r\n                ...state,\r\n                msgError: action.payload\r\n            }\r\n\r\n        case types.uiRemoveError: \r\n            return{\r\n                ...state,\r\n                msgError: null\r\n            }\r\n        \r\n        case types.uiStartLoading:\r\n            return{\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case types.uiFinishLoading:\r\n            return{\r\n                ...state,\r\n                loading: false\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","// import { createStore, combineReducers } from \"redux\";\r\n// import { authReducer } from \"../reducers/authReducer\";\r\n\r\n// const reducers = combineReducers({\r\n//     auth: authReducer\r\n// })\r\n\r\n// export const store = createStore(reducers)\r\n\r\n\r\nimport {createStore, combineReducers, compose, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { authReducer } from \"../reducers/authReducer\";\r\nimport { notesReducer } from '../reducers/notesReducer';\r\nimport { uiReducer } from '../reducers/uiReducer';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    ui: uiReducer,\r\n    notes: notesReducer\r\n})\r\n\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    )\r\n)","import { types } from \"../types/types\";\r\n\r\nexport const authReducer = ( state = {}, action ) => {\r\n\r\n    switch ( action.type ) {\r\n        case types.login:\r\n            return {\r\n                uid: action.payload.uid,\r\n                name: action.payload.displayName\r\n            }\r\n\r\n        case types.logout:\r\n            return {}\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react';\nimport { Provider } from 'react-redux';\n\nimport { AppRouter } from './routers/AppRouter';\nimport { store } from './store/store';\n\nexport const JournalApp = () => {\n    return (\n        <Provider store={ store }>\n            <AppRouter />\n        </Provider>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { JournalApp } from './JournalApp';\nimport './styles/styles.scss'\n\n\n\nReactDOM.render(\n  <JournalApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}